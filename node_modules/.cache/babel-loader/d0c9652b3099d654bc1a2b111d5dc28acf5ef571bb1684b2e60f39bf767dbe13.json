{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VivekReddyMeka\\\\Desktop\\\\Accounts_Management\\\\src\\\\Components\\\\Dashboard.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Building2, Code } from 'lucide-react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport OrganizationSelector from './OrganizationSelector';\nimport CompanyDashboard from './CompanyDashboard';\nimport ProjectDashboard from './ProjectDashboard';\nimport Header from './Header';\nimport '../Styles/Dashboard.css'; // Import the CSS file\nimport * as XLSX from 'xlsx'; // Add at top\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { Chart, ArcElement, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement, BarElement, CategoryScale, LinearScale, Tooltip, Legend);\nconst API_BASE = 'http://localhost:3001'; // adjust if your server runs elsewhere\n\n// Main Dashboard Component (now loads data from DB via API)\nconst OrganizationDashboard = ({\n  isLoggedIn,\n  onLogout\n}) => {\n  _s2();\n  var _location$state,\n    _location$state2,\n    _s = $RefreshSig$();\n  const location = useLocation();\n  const userEmail = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.userEmail) || '';\n  const organizationId = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.organizationId) || null;\n\n  // --- State declarations ---\n  const [view, setView] = useState(() => localStorage.getItem('dashboardView') || 'organizations');\n  const [selectedOrg, setSelectedOrg] = useState(() => {\n    const org = localStorage.getItem('selectedOrg');\n    return org ? JSON.parse(org) : null;\n  });\n  const [selectedDept, setSelectedDept] = useState(() => localStorage.getItem('selectedDept') || 'all');\n  const [selectedProject, setSelectedProject] = useState(() => {\n    const proj = localStorage.getItem('selectedProject');\n    return proj ? JSON.parse(proj) : null;\n  });\n  const [organizations, setOrganizations] = useState([]);\n  const [rawProjects, setRawProjects] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [totals, setTotals] = useState({\n    budget: 0,\n    spent: 0,\n    profit: 0,\n    ar: 0,\n    ap: 0,\n    team: 0\n  });\n  const [showNewProjectForm, setShowNewProjectForm] = useState(false);\n  const [uploadedData, setUploadedData] = useState([]);\n  const [projectsFromFile, setProjectsFromFile] = useState([]);\n  const [uploadError, setUploadError] = useState('');\n  const [uploadFileName, setUploadFileName] = useState('');\n  const [showAmountPopup, setShowAmountPopup] = useState(false);\n  const [dateFilter, setDateFilter] = useState({\n    from: '',\n    to: ''\n  });\n  const [showUploadedPreview, setShowUploadedPreview] = useState(false);\n  const navigate = useNavigate();\n\n  // --- ADD THIS BLOCK RIGHT HERE ---\n  useEffect(() => {\n    // Restore uploaded data and projects from localStorage if present\n    const savedData = localStorage.getItem('uploadedData');\n    const savedProjects = localStorage.getItem('projectsFromFile');\n    if (savedData && savedProjects) {\n      setUploadedData(JSON.parse(savedData));\n      setProjectsFromFile(JSON.parse(savedProjects));\n      setShowUploadedPreview(true);\n    }\n  }, []);\n  // --- END BLOCK ---\n\n  // Save view/page state to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('dashboardView', view);\n  }, [view]);\n  useEffect(() => {\n    localStorage.setItem('selectedOrg', JSON.stringify(selectedOrg));\n  }, [selectedOrg]);\n  useEffect(() => {\n    localStorage.setItem('selectedDept', selectedDept);\n  }, [selectedDept]);\n  useEffect(() => {\n    localStorage.setItem('selectedProject', JSON.stringify(selectedProject));\n  }, [selectedProject]);\n  useEffect(() => {\n    // load organizations list\n    const loadOrgs = async () => {\n      try {\n        const res = await fetch(`${API_BASE}/organizations`);\n        const data = await res.json();\n        const mapped = data.map(o => ({\n          id: o.OrganizationID,\n          name: o.Name,\n          type: o.Type || '',\n          description: o.Description || '',\n          // choose icons/colors by name/type to keep existing UI consistent\n          icon: o.Name && o.Name.toLowerCase().includes('collabridge') ? Code : Building2,\n          color: o.Name && o.Name.toLowerCase().includes('la tierra') ? '#10b981' : '#3b82f6'\n        }));\n        setOrganizations(mapped);\n      } catch (err) {\n        console.error('Error loading organizations:', err);\n      }\n    };\n    loadOrgs();\n  }, []);\n\n  // Auto-select organization based on email domain\n  // useEffect(() => {\n  //   if (!userEmail || !organizations.length) return;\n\n  //   let orgToSelect = null;\n  //   if (userEmail.toLowerCase().endsWith('@collabridge.com')) {\n  //     orgToSelect = organizations.find(o => o.name.toLowerCase().includes('collabridge'));\n  //   } else if (userEmail.toLowerCase().endsWith('@latierra.com')) {\n  //     orgToSelect = organizations.find(o => o.name.toLowerCase().includes('la tierra') || o.name.toLowerCase().includes('buildcraft'));\n  //   }\n\n  //   if (orgToSelect && (!selectedOrg || selectedOrg.id !== orgToSelect.id)) {\n  //     handleOrgSelect(orgToSelect.id);\n  //   }\n  // }, [userEmail, organizations]);\n\n  // Auto-select organization if organizationId is present (DISABLED to always show selector)\n  // useEffect(() => {\n  //   if (!organizationId || !organizations.length) return;\n  //   const orgToSelect = organizations.find(o => o.id === Number(organizationId));\n  //   if (orgToSelect && (!selectedOrg || selectedOrg.id !== orgToSelect.id)) {\n  //     handleOrgSelect(orgToSelect.id);\n  //   }\n  // }, [organizationId, organizations]);\n\n  const handleOrgSelect = async orgId => {\n    setSelectedDept('all');\n    setSelectedProject(null);\n    setView('dashboard');\n\n    // Clear uploaded file state when switching organizations\n    setProjectsFromFile([]);\n    setUploadedData([]);\n    setShowUploadedPreview(false);\n    setUploadFileName('');\n    setUploadError('');\n    try {\n      var _organizations$find, _organizations$find2, _organizations$find3, _organizations$find4, _organizations$find5;\n      // get organization details\n      const orgRes = await fetch(`${API_BASE}/organizations/${orgId}`);\n      const orgData = await orgRes.json();\n\n      // projects for organization\n      const projRes = await fetch(`${API_BASE}/projects?organizationId=${orgId}`);\n      const projRows = await projRes.json();\n\n      // departments list for filters\n      const deptRes = await fetch(`${API_BASE}/departments?organizationId=${orgId}`);\n      const deptRows = await deptRes.json();\n\n      // map project rows to the shape used by UI (keep DepartmentName for filtering)\n      const mappedProjects = (projRows || []).map(p => {\n        const budget = Number(p.Budget || 0);\n        const spent = Number(p.Spending || 0);\n        const profit = Number(p.Profit !== undefined ? p.Profit : budget - spent);\n        return {\n          id: p.ProjectID || p.ProjectId || p.id,\n          name: p.ProjectName || p.Name || '',\n          status: (p.Status || '').toString(),\n          budget,\n          spent,\n          profit,\n          ar: Number(p.AR || 0),\n          // fallback 0, server may not supply project-level AR\n          ap: Number(p.AP !== undefined ? p.AP : spent),\n          // fallback to spent as payable approximation\n          team: Number(p.Team || 0),\n          // not present in DB seed -> 0 unless backend supplies it\n          deadline: p.EndDate || p.deadline || '',\n          departmentName: p.DepartmentName || ''\n        };\n      });\n      setRawProjects(mappedProjects);\n      // set selectedOrg with API info + mapped projects\n      // Always use the name from organizations list if missing in API response\n      setSelectedOrg({\n        id: orgData.OrganizationID || orgId,\n        name: orgData.Name && orgData.Name.trim() ? orgData.Name : ((_organizations$find = organizations.find(o => o.id === orgId)) === null || _organizations$find === void 0 ? void 0 : _organizations$find.name) || '',\n        type: orgData.Type && orgData.Type.trim() ? orgData.Type : ((_organizations$find2 = organizations.find(o => o.id === orgId)) === null || _organizations$find2 === void 0 ? void 0 : _organizations$find2.type) || '',\n        description: orgData.Description && orgData.Description.trim() ? orgData.Description : ((_organizations$find3 = organizations.find(o => o.id === orgId)) === null || _organizations$find3 === void 0 ? void 0 : _organizations$find3.description) || '',\n        projects: mappedProjects,\n        color: ((_organizations$find4 = organizations.find(o => o.id === orgId)) === null || _organizations$find4 === void 0 ? void 0 : _organizations$find4.color) || '#3b82f6',\n        icon: ((_organizations$find5 = organizations.find(o => o.id === orgId)) === null || _organizations$find5 === void 0 ? void 0 : _organizations$find5.icon) || Building2\n      });\n\n      // normalize departments\n      setDepartments((deptRows || []).map(d => ({\n        id: d.DepartmentID,\n        name: d.Name\n      })));\n\n      // totals: try to use organization dashboard endpoint\n      try {\n        const dashRes = await fetch(`${API_BASE}/organizations/${orgId}/dashboard`);\n        if (dashRes.ok) {\n          const dash = await dashRes.json();\n          setTotals({\n            budget: Number(dash.totalBudget || 0),\n            spent: Number(dash.totalSpending || 0),\n            profit: Number(dash.totalBudget || 0) - Number(dash.totalSpending || 0),\n            ar: Number(dash.totalAR || 0),\n            ap: Number(dash.totalAP || 0),\n            team: mappedProjects.reduce((s, p) => s + (p.team || 0), 0)\n          });\n        } else {\n          // fallback compute from projects\n          computeTotalsFromProjects(mappedProjects);\n        }\n      } catch (err) {\n        computeTotalsFromProjects(mappedProjects);\n      }\n    } catch (err) {\n      console.error('Error selecting organization:', err);\n    }\n  };\n  const computeTotalsFromProjects = projects => {\n    const t = projects.reduce((acc, project) => ({\n      budget: acc.budget + (project.budget || 0),\n      spent: acc.spent + (project.spent || 0),\n      profit: acc.profit + (project.profit || 0),\n      ar: acc.ar + (project.ar || 0),\n      ap: acc.ap + (project.ap || 0),\n      team: acc.team + (project.team || 0)\n    }), {\n      budget: 0,\n      spent: 0,\n      profit: 0,\n      ar: 0,\n      ap: 0,\n      team: 0\n    });\n    setTotals(t);\n  };\n  const handleProjectSelect = project => {\n    // project could be raw project object from projects list\n    setSelectedProject(project);\n    setView('project');\n  };\n  const handleBack = () => {\n    if (view === 'project') {\n      setView('dashboard');\n      setSelectedProject(null);\n    } else {\n      setView('organizations');\n      setSelectedOrg(null);\n      setSelectedDept('all');\n      setRawProjects([]);\n      setDepartments([]);\n      setTotals({\n        budget: 0,\n        spent: 0,\n        profit: 0,\n        ar: 0,\n        ap: 0,\n        team: 0\n      });\n      // DO NOT clear uploadedData or projectsFromFile here!\n    }\n  };\n  const getFilteredProjects = () => {\n    // If projectsFromFile is present, use it for projects\n    if (projectsFromFile && projectsFromFile.length > 0) {\n      // If no department info, just return all\n      return projectsFromFile;\n    }\n    // Otherwise, use DB data\n    if (!selectedOrg) return [];\n    if (selectedOrg.id === 1 && selectedOrg.projects) {\n      return selectedOrg.projects;\n    }\n    // If no department info, just return all\n    return rawProjects;\n  };\n  const calculateTotals = projects => {\n    return projects.reduce((acc, project) => ({\n      budget: acc.budget + (project.budget || 0),\n      spent: acc.spent + (project.spent || 0),\n      profit: acc.profit + (project.profit || 0),\n      ar: acc.ar + (project.ar || 0),\n      ap: acc.ap + (project.ap || 0),\n      team: acc.team + (project.team || 0)\n    }), {\n      budget: 0,\n      spent: 0,\n      profit: 0,\n      ar: 0,\n      ap: 0,\n      team: 0\n    });\n  };\n\n  // called after a new project is created to refresh\n  const handleProjectCreated = async () => {\n    setShowNewProjectForm(false);\n    if (selectedOrg && selectedOrg.id) {\n      // re-load selected organization data (reuse handleOrgSelect)\n      await handleOrgSelect(selectedOrg.id);\n    }\n  };\n\n  // Inline modal component (no separate NewProjectForm file)\n  const NewProjectModal = ({\n    organizationId,\n    departments = [],\n    onCreated,\n    onCancel\n  }) => {\n    _s();\n    const [form, setForm] = useState({\n      name: '',\n      departmentId: '',\n      startDate: '',\n      endDate: '',\n      budget: '',\n      spending: '',\n      status: 'Not Started',\n      description: ''\n    });\n    const [submitting, setSubmitting] = useState(false);\n    useEffect(() => {\n      const prev = document.body.style.overflow;\n      document.body.style.overflow = 'hidden';\n      const onKey = e => {\n        if (e.key === 'Escape') onCancel && onCancel();\n      };\n      window.addEventListener('keydown', onKey);\n      return () => {\n        document.body.style.overflow = prev;\n        window.removeEventListener('keydown', onKey);\n      };\n    }, [onCancel]);\n    const update = (k, v) => setForm(s => ({\n      ...s,\n      [k]: v\n    }));\n    const handleSubmit = async e => {\n      e.preventDefault();\n      if (submitting) return;\n      setSubmitting(true);\n      const payload = {\n        Name: form.name,\n        DepartmentID: form.departmentId || null,\n        OrganizationID: organizationId || null,\n        StartDate: form.startDate || null,\n        EndDate: form.endDate || null,\n        Budget: form.budget ? parseFloat(form.budget) : 0,\n        Spending: form.spending ? parseFloat(form.spending) : 0,\n        Status: form.status,\n        Description: form.description || null\n      };\n      try {\n        const res = await fetch(`${API_BASE}/projects`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        if (res.ok) {\n          onCreated && onCreated();\n        } else {\n          const err = await res.json().catch(() => ({}));\n          alert('Failed to create project: ' + (err.error || res.statusText));\n        }\n      } catch (err) {\n        console.error(err);\n        alert('Failed to create project');\n      } finally {\n        setSubmitting(false);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onMouseDown: () => onCancel && onCancel(),\n      style: {\n        position: 'fixed',\n        inset: 0,\n        background: 'rgba(0,0,0,0.45)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 2000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-panel\",\n        role: \"dialog\",\n        \"aria-modal\": \"true\",\n        onMouseDown: e => e.stopPropagation(),\n        style: {\n          width: 720,\n          maxWidth: '95%',\n          background: '#fff',\n          borderRadius: 8,\n          padding: 20,\n          boxShadow: '0 10px 30px rgba(0,0,0,0.25)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              margin: 0\n            },\n            children: \"Create New Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => onCancel && onCancel(),\n            \"aria-label\": \"Close\",\n            style: {\n              border: 0,\n              background: 'transparent',\n              fontSize: 20,\n              lineHeight: 1,\n              cursor: 'pointer'\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr',\n              gap: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  display: 'block',\n                  fontSize: 12,\n                  marginBottom: 6\n                },\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                required: true,\n                value: form.name,\n                onChange: e => update('name', e.target.value),\n                style: {\n                  width: '100%',\n                  padding: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  display: 'block',\n                  fontSize: 12,\n                  marginBottom: 6\n                },\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: form.departmentId,\n                onChange: e => update('departmentId', e.target.value),\n                style: {\n                  width: '100%',\n                  padding: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- none -- (organization-level)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this), departments.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: d.id,\n                  children: d.name\n                }, d.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  display: 'block',\n                  fontSize: 12,\n                  marginBottom: 6\n                },\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: form.startDate,\n                onChange: e => update('startDate', e.target.value),\n                style: {\n                  width: '100%',\n                  padding: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  display: 'block',\n                  fontSize: 12,\n                  marginBottom: 6\n                },\n                children: \"End Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: form.endDate,\n                onChange: e => update('endDate', e.target.value),\n                style: {\n                  width: '100%',\n                  padding: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  display: 'block',\n                  fontSize: 12,\n                  marginBottom: 6\n                },\n                children: \"Budget\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: form.budget,\n                onChange: e => update('budget', e.target.value),\n                style: {\n                  width: '100%',\n                  padding: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  display: 'block',\n                  fontSize: 12,\n                  marginBottom: 6\n                },\n                children: \"Spending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: form.spending,\n                onChange: e => update('spending', e.target.value),\n                style: {\n                  width: '100%',\n                  padding: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                gridColumn: '1 / -1'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  display: 'block',\n                  fontSize: 12,\n                  marginBottom: 6\n                },\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: form.status,\n                onChange: e => update('status', e.target.value),\n                style: {\n                  width: '100%',\n                  padding: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Not Started\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"In Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"On Hold\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                gridColumn: '1 / -1'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  display: 'block',\n                  fontSize: 12,\n                  marginBottom: 6\n                },\n                children: \"Description (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: form.description,\n                onChange: e => update('description', e.target.value),\n                style: {\n                  width: '100%',\n                  padding: 8\n                },\n                rows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: 8,\n              marginTop: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => onCancel && onCancel(),\n              style: {\n                padding: '8px 14px'\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: submitting,\n              style: {\n                padding: '8px 14px'\n              },\n              children: submitting ? 'Creating…' : 'Create Project'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this);\n  };\n  _s(NewProjectModal, \"u1sl/gAALcDAQSDJuWXmQoPxWtI=\");\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    try {\n      const parsedData = await parseFile(file);\n      setUploadedData(parsedData);\n      localStorage.setItem('uploadedData', JSON.stringify(parsedData)); // Save to localStorage\n\n      const groupedProjects = groupProjectsById(parsedData);\n      setProjectsFromFile(groupedProjects);\n      localStorage.setItem('projectsFromFile', JSON.stringify(groupedProjects)); // Save to localStorage\n\n      setShowUploadedPreview(true);\n      setUploadFileName(file.name);\n      setUploadError('');\n    } catch (err) {\n      setUploadError('Failed to parse file.');\n    }\n  };\n\n  // Helper function to calculate metrics from Excel data\n  const getExcelMetrics = data => {\n    let totalAmount = 0;\n    const byCategory = {};\n    const byExpenseType = {};\n    data.forEach(row => {\n      const amount = Number(row.Amount || 0);\n      totalAmount += amount;\n      const category = row.Category || 'Uncategorized';\n      byCategory[category] = (byCategory[category] || 0) + amount;\n      const expenseType = row.ExpenseType || 'Expense';\n      byExpenseType[expenseType] = (byExpenseType[expenseType] || 0) + amount;\n    });\n    return {\n      totalAmount,\n      byCategory,\n      byExpenseType\n    };\n  };\n  const handleSaveToDB = async () => {\n    if (!uploadedData.length) return;\n    const res = await fetch(`${API_BASE}/import-transactions`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        rows: uploadedData,\n        uploaderEmail: userEmail,\n        fileName: uploadFileName,\n        organizationId: (selectedOrg === null || selectedOrg === void 0 ? void 0 : selectedOrg.id) || null\n      })\n    });\n    const result = await res.json();\n    alert(result.message || 'Import complete');\n\n    // Clear upload state and reload organization data from DB\n    setShowUploadedPreview(false);\n    setUploadedData([]);\n    setProjectsFromFile([]);\n    setUploadFileName('');\n    setUploadError('');\n    await handleOrgSelect(selectedOrg.id); // Reload from DB\n  };\n\n  // Move this helper function up, before you use it!\n  const getFilteredUploadedData = () => {\n    if (!uploadedData.length) return [];\n    if (!dateFilter.from && !dateFilter.to) return uploadedData;\n    return uploadedData.filter(row => {\n      const rowDate = row.Date || row.TxnDate;\n      if (!rowDate) return false;\n      const d = new Date(rowDate);\n      const from = dateFilter.from ? new Date(dateFilter.from) : null;\n      const to = dateFilter.to ? new Date(dateFilter.to) : null;\n      if (from && d < from) return false;\n      if (to && d > to) return false;\n      return true;\n    });\n  };\n  const filteredExcelData = getFilteredUploadedData();\n  const metrics = getExcelMetrics(filteredExcelData);\n  const renderExcelCards = metrics => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: 24,\n      marginBottom: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        flex: 1,\n        background: '#e0f2fe',\n        padding: 18,\n        borderRadius: 8,\n        cursor: 'pointer'\n      },\n      onClick: () => setShowAmountPopup(true),\n      title: \"Click to view breakdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 28,\n          fontWeight: 700\n        },\n        children: metrics.totalAmount.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        flex: 1,\n        background: '#fef9c3',\n        padding: 18,\n        borderRadius: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          margin: 0,\n          padding: 0,\n          listStyle: 'none'\n        },\n        children: Object.entries(metrics.byCategory).map(([cat, amt]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            fontSize: 16\n          },\n          children: [cat, \": \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: amt.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 59\n          }, this)]\n        }, cat, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        flex: 1,\n        background: '#dcfce7',\n        padding: 18,\n        borderRadius: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Expense Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          margin: 0,\n          padding: 0,\n          listStyle: 'none'\n        },\n        children: Object.entries(metrics.byExpenseType).map(([type, amt]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            fontSize: 16\n          },\n          children: [type, \": \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: amt.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 61\n          }, this)]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 518,\n    columnNumber: 5\n  }, this);\n  const renderExcelCharts = metrics => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: 32,\n      marginBottom: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Amount by Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: {\n          labels: Object.keys(metrics.byCategory),\n          datasets: [{\n            data: Object.values(metrics.byCategory),\n            backgroundColor: ['#3b82f6', '#10b981', '#f59e42', '#f43f5e', '#6366f1', '#fef9c3']\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Amount by Expense Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: {\n          labels: Object.keys(metrics.byExpenseType),\n          datasets: [{\n            label: 'Amount',\n            data: Object.values(metrics.byExpenseType),\n            backgroundColor: '#3b82f6'\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              display: false\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 548,\n    columnNumber: 5\n  }, this);\n  const renderRecentTransactions = data => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Recent Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 16,\n        flexWrap: 'wrap'\n      },\n      children: data.slice(0, 5).map((row, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          border: '1px solid #eee',\n          borderRadius: 8,\n          padding: 14,\n          minWidth: 180,\n          boxShadow: '0 2px 8px #f3f4f6'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: 600\n          },\n          children: row.Category || 'Uncategorized'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#3b82f6',\n            fontSize: 18\n          },\n          children: Number(row.Amount || 0).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            color: '#666'\n          },\n          children: [row.ExpenseType || 'Expense', \" | \", row.Date || row.TxnDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            color: '#888'\n          },\n          children: row.Note || row.Description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 583,\n    columnNumber: 5\n  }, this);\n\n  // Helper to extract initial amount from uploaded Excel data\n  const getInitialAmountFromExcel = data => {\n    if (!data || !data.length) return 0;\n    // Look for a row with Category: \"Initial\" or ExpenseType: \"Initial\"\n    const initialRow = data.find(row => row.Category && row.Category.toLowerCase() === 'initial' || row.ExpenseType && row.ExpenseType.toLowerCase() === 'initial');\n    if (initialRow) {\n      return Number(initialRow.Amount || 0);\n    }\n    // Optionally, fallback to first row if you want\n    // return Number(data[0].Amount || 0);\n    return 0;\n  };\n  const getAmountBreakdown = data => {\n    // Dynamically get initial amount from Excel\n    const initialAmount = getInitialAmountFromExcel(data);\n    let totalExpenses = 0;\n    let totalIncome = 0;\n    const expenseDetails = {};\n    const incomeDetails = {};\n    data.forEach(row => {\n      // Skip initial amount row from expense/income calculation\n      const isInitial = row.Category && row.Category.toLowerCase() === 'initial' || row.ExpenseType && row.ExpenseType.toLowerCase() === 'initial';\n      if (isInitial) return;\n      const amt = Number(row.Amount || 0);\n      const type = (row.Category || '').toLowerCase();\n      const expType = row.ExpenseType || 'Expense';\n      if (type === 'expense' || expType.toLowerCase() === 'expense') {\n        totalExpenses += amt;\n        expenseDetails[expType] = (expenseDetails[expType] || 0) + amt;\n      } else if (type === 'receipt' || expType.toLowerCase() === 'receipt' || expType.toLowerCase() === 'income') {\n        totalIncome += amt;\n        incomeDetails[expType] = (incomeDetails[expType] || 0) + amt;\n      }\n    });\n    const remaining = initialAmount + totalIncome - totalExpenses;\n    return {\n      initialAmount,\n      totalExpenses,\n      totalIncome,\n      remaining,\n      expenseDetails,\n      incomeDetails\n    };\n  };\n\n  // Helper to group non-project transactions\n  function getOtherTransactions(data) {\n    return data.filter(row => !row.ProjectID && !row.ProjectName && !row.projectId && !row.projectName);\n  }\n\n  // Helper to create \"Other\" pseudo-project\n  function getOtherProject(data) {\n    const otherTxs = getOtherTransactions(data);\n    if (!otherTxs.length) return null;\n    const ar = otherTxs.filter(tx => (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'income' || (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'receipt').reduce((sum, tx) => sum + Number(tx.Amount || tx.amount || 0), 0);\n    const ap = otherTxs.filter(tx => (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'expense').reduce((sum, tx) => sum + Number(tx.Amount || tx.amount || 0), 0);\n    return {\n      id: 'other',\n      name: 'Other (Non-Project)',\n      transactions: otherTxs,\n      ar,\n      ap,\n      profit: ar - ap\n    };\n  }\n  const projectsData = projectsFromFile.length > 0 ? projectsFromFile : getFilteredProjects();\n  let dashboardProjects = [...projectsData];\n  if (uploadedData.length > 0) {\n    const otherProject = getOtherProject(uploadedData);\n    if (otherProject) dashboardProjects.push(otherProject);\n  }\n\n  // --- ADD RELOAD FUNCTION HERE ---\n  const reloadDashboardDataFromDB = async () => {\n    // Fetch projects and transactions from DB for the selected organization\n    const orgId = (selectedOrg === null || selectedOrg === void 0 ? void 0 : selectedOrg.id) || organizationId;\n    if (!orgId) return;\n    try {\n      const res = await fetch(`http://localhost:3001/projects?organizationId=${orgId}`);\n      const projects = await res.json();\n      setRawProjects(projects);\n      // ...update other dashboard state as needed...\n    } catch (err) {\n      alert('Failed to reload dashboard data: ' + err.message);\n    }\n  };\n  // --- END BLOCK ---\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoggedIn: isLoggedIn,\n      onLogout: onLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }, this), view === 'organizations' && /*#__PURE__*/_jsxDEV(OrganizationSelector, {\n      organizations: organizations,\n      onSelect: handleOrgSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 9\n    }, this), view === 'project' && selectedProject && /*#__PURE__*/_jsxDEV(ProjectDashboard, {\n      project: selectedProject,\n      organization: selectedOrg,\n      onBack: handleBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 9\n    }, this), view === 'dashboard' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CompanyDashboard, {\n        organization: selectedOrg,\n        selectedDept: selectedDept,\n        onDeptChange: setSelectedDept,\n        onProjectSelect: handleProjectSelect,\n        onAddProject: setShowNewProjectForm,\n        onFileUpload: handleFileUpload,\n        onBack: handleBack,\n        projects: dashboardProjects // <-- this is correct!\n        ,\n        totals: calculateTotals(dashboardProjects)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 11\n      }, this), showNewProjectForm && selectedOrg && /*#__PURE__*/_jsxDEV(NewProjectModal, {\n        organizationId: selectedOrg.id,\n        departments: departments,\n        onCreated: handleProjectCreated,\n        onCancel: () => setShowNewProjectForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), showAmountPopup && uploadedData.length > 0 && /*#__PURE__*/_jsxDEV(AmountBreakdownPopup, {\n      breakdown: getAmountBreakdown(uploadedData),\n      onClose: () => setShowAmountPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 9\n    }, this), showUploadedPreview && uploadedData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Data Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          background: '#10b981',\n          color: '#fff',\n          padding: '10px 24px',\n          borderRadius: 8,\n          border: 'none',\n          fontWeight: 600,\n          marginTop: 16,\n          cursor: 'pointer'\n        },\n        onClick: handleSaveToDB,\n        children: \"Export to Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s2(OrganizationDashboard, \"tfJH2ZdDdUXlAhzvYkDoUjB1hlA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = OrganizationDashboard;\nconst AmountBreakdownPopup = ({\n  breakdown,\n  onClose\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    background: 'rgba(0,0,0,0.35)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 9999\n  },\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: '#fff',\n      borderRadius: 10,\n      padding: 32,\n      minWidth: 340,\n      boxShadow: '0 4px 24px #0002',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      style: {\n        position: 'absolute',\n        top: 12,\n        right: 16,\n        background: 'none',\n        border: 'none',\n        fontSize: 22,\n        cursor: 'pointer'\n      },\n      \"aria-label\": \"Close\",\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 0\n      },\n      children: \"Total Amount Breakdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Initial Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 9\n      }, this), \" \\u20B9\", breakdown.initialAmount.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Total Expenses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 9\n      }, this), \" \\u20B9\", breakdown.totalExpenses.toLocaleString(), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          margin: '8px 0 0 16px',\n          padding: 0\n        },\n        children: Object.entries(breakdown.expenseDetails).map(([cat, amt]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [cat, \": \\u20B9\", amt.toLocaleString()]\n        }, cat, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Total Income:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 9\n      }, this), \" \\u20B9\", breakdown.totalIncome.toLocaleString(), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          margin: '8px 0 0 16px',\n          padding: 0\n        },\n        children: Object.entries(breakdown.incomeDetails).map(([cat, amt]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [cat, \": \\u20B9\", amt.toLocaleString()]\n        }, cat, true, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: 18,\n        fontWeight: 600,\n        color: '#10b981'\n      },\n      children: [\"Remaining Balance: \\u20B9\", breakdown.remaining.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 778,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 774,\n  columnNumber: 3\n}, this);\n_c2 = AmountBreakdownPopup;\nconst parseFile = async file => {\n  // CSV\n  if (file.name.endsWith('.csv')) {\n    return new Promise((resolve, reject) => {\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        complete: results => resolve(results.data),\n        error: err => reject(err)\n      });\n    });\n  }\n  // Excel (xlsx/xls)\n  if (file.name.endsWith('.xlsx') || file.name.endsWith('.xls')) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const data = new Uint8Array(e.target.result);\n        const workbook = XLSX.read(data, {\n          type: 'array'\n        });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        const json = XLSX.utils.sheet_to_json(worksheet, {\n          defval: ''\n        });\n        resolve(json);\n      };\n      reader.onerror = reject;\n      reader.readAsArrayBuffer(file);\n    });\n  }\n  throw new Error('Unsupported file type');\n};\nfunction groupProjectsById(data) {\n  const projectsMap = {};\n  data.forEach(row => {\n    const pid = row.ProjectID || row.projectId || row.project_id || row.ProjectName || row.projectName;\n    if (!pid) return;\n    if (!projectsMap[pid]) {\n      projectsMap[pid] = {\n        id: pid,\n        name: row.ProjectName || row.projectName || `Project ${pid}`,\n        transactions: [],\n        ar: 0,\n        ap: 0,\n        profit: 0\n      };\n    }\n    projectsMap[pid].transactions.push(row);\n  });\n  // Calculate AR, AP, Profit for each project\n  Object.values(projectsMap).forEach(project => {\n    project.ar = project.transactions.filter(tx => (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'income' || (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'receipt').reduce((sum, tx) => sum + Number(tx.Amount || tx.amount || 0), 0);\n    project.ap = project.transactions.filter(tx => (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'expense').reduce((sum, tx) => sum + Number(tx.Amount || tx.amount || 0), 0);\n    project.profit = project.ar - project.ap;\n  });\n  return Object.values(projectsMap);\n}\nexport default OrganizationDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"OrganizationDashboard\");\n$RefreshReg$(_c2, \"AmountBreakdownPopup\");","map":{"version":3,"names":["React","useState","useEffect","Building2","Code","useNavigate","useLocation","OrganizationSelector","CompanyDashboard","ProjectDashboard","Header","XLSX","Bar","Pie","Chart","ArcElement","BarElement","CategoryScale","LinearScale","Tooltip","Legend","Papa","jsxDEV","_jsxDEV","Fragment","_Fragment","register","API_BASE","OrganizationDashboard","isLoggedIn","onLogout","_s2","_location$state","_location$state2","_s","$RefreshSig$","location","userEmail","state","organizationId","view","setView","localStorage","getItem","selectedOrg","setSelectedOrg","org","JSON","parse","selectedDept","setSelectedDept","selectedProject","setSelectedProject","proj","organizations","setOrganizations","rawProjects","setRawProjects","departments","setDepartments","totals","setTotals","budget","spent","profit","ar","ap","team","showNewProjectForm","setShowNewProjectForm","uploadedData","setUploadedData","projectsFromFile","setProjectsFromFile","uploadError","setUploadError","uploadFileName","setUploadFileName","showAmountPopup","setShowAmountPopup","dateFilter","setDateFilter","from","to","showUploadedPreview","setShowUploadedPreview","navigate","savedData","savedProjects","setItem","stringify","loadOrgs","res","fetch","data","json","mapped","map","o","id","OrganizationID","name","Name","type","Type","description","Description","icon","toLowerCase","includes","color","err","console","error","handleOrgSelect","orgId","_organizations$find","_organizations$find2","_organizations$find3","_organizations$find4","_organizations$find5","orgRes","orgData","projRes","projRows","deptRes","deptRows","mappedProjects","p","Number","Budget","Spending","Profit","undefined","ProjectID","ProjectId","ProjectName","status","Status","toString","AR","AP","Team","deadline","EndDate","departmentName","DepartmentName","trim","find","projects","d","DepartmentID","dashRes","ok","dash","totalBudget","totalSpending","totalAR","totalAP","reduce","s","computeTotalsFromProjects","t","acc","project","handleProjectSelect","handleBack","getFilteredProjects","length","calculateTotals","handleProjectCreated","NewProjectModal","onCreated","onCancel","form","setForm","departmentId","startDate","endDate","spending","submitting","setSubmitting","prev","document","body","style","overflow","onKey","e","key","window","addEventListener","removeEventListener","update","k","v","handleSubmit","preventDefault","payload","StartDate","parseFloat","method","headers","catch","alert","statusText","className","onMouseDown","position","inset","background","display","alignItems","justifyContent","zIndex","children","role","stopPropagation","width","maxWidth","borderRadius","padding","boxShadow","marginBottom","margin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","fontSize","lineHeight","cursor","onSubmit","gridTemplateColumns","gap","required","value","onChange","target","gridColumn","rows","marginTop","disabled","handleFileUpload","file","files","parsedData","parseFile","groupedProjects","groupProjectsById","getExcelMetrics","totalAmount","byCategory","byExpenseType","forEach","row","amount","Amount","category","Category","expenseType","ExpenseType","handleSaveToDB","uploaderEmail","result","message","getFilteredUploadedData","filter","rowDate","Date","TxnDate","filteredExcelData","metrics","renderExcelCards","flex","title","fontWeight","toLocaleString","listStyle","Object","entries","cat","amt","renderExcelCharts","labels","keys","datasets","values","backgroundColor","options","plugins","legend","label","scales","y","beginAtZero","renderRecentTransactions","flexWrap","slice","idx","minWidth","Note","getInitialAmountFromExcel","initialRow","getAmountBreakdown","initialAmount","totalExpenses","totalIncome","expenseDetails","incomeDetails","isInitial","expType","remaining","getOtherTransactions","projectId","projectName","getOtherProject","otherTxs","tx","sum","transactions","projectsData","dashboardProjects","otherProject","push","reloadDashboardDataFromDB","onSelect","organization","onBack","onDeptChange","onProjectSelect","onAddProject","onFileUpload","AmountBreakdownPopup","breakdown","onClose","_c","top","left","height","right","_c2","endsWith","Promise","resolve","reject","header","skipEmptyLines","complete","results","reader","FileReader","onload","Uint8Array","workbook","read","sheetName","SheetNames","worksheet","Sheets","utils","sheet_to_json","defval","onerror","readAsArrayBuffer","Error","projectsMap","pid","project_id","$RefreshReg$"],"sources":["C:/Users/VivekReddyMeka/Desktop/Accounts_Management/src/Components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Building2, Code } from 'lucide-react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport OrganizationSelector from './OrganizationSelector';\r\nimport CompanyDashboard from './CompanyDashboard';\r\nimport ProjectDashboard from './ProjectDashboard';\r\nimport Header from './Header';\r\nimport '../Styles/Dashboard.css'; // Import the CSS file\r\nimport * as XLSX from 'xlsx'; // Add at top\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js';\r\nimport Papa from 'papaparse';\r\n\r\nChart.register(ArcElement, BarElement, CategoryScale, LinearScale, Tooltip, Legend);\r\n \r\nconst API_BASE = 'http://localhost:3001'; // adjust if your server runs elsewhere\r\n \r\n// Main Dashboard Component (now loads data from DB via API)\r\nconst OrganizationDashboard = ({ isLoggedIn, onLogout }) => {\r\n  const location = useLocation();\r\n  const userEmail = location.state?.userEmail || '';\r\n  const organizationId = location.state?.organizationId || null;\r\n\r\n  // --- State declarations ---\r\n  const [view, setView] = useState(() => localStorage.getItem('dashboardView') || 'organizations');\r\n  const [selectedOrg, setSelectedOrg] = useState(() => {\r\n    const org = localStorage.getItem('selectedOrg');\r\n    return org ? JSON.parse(org) : null;\r\n  });\r\n  const [selectedDept, setSelectedDept] = useState(() => localStorage.getItem('selectedDept') || 'all');\r\n  const [selectedProject, setSelectedProject] = useState(() => {\r\n    const proj = localStorage.getItem('selectedProject');\r\n    return proj ? JSON.parse(proj) : null;\r\n  });\r\n  const [organizations, setOrganizations] = useState([]);\r\n  const [rawProjects, setRawProjects] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [totals, setTotals] = useState({ budget:0, spent:0, profit:0, ar:0, ap:0, team:0 });\r\n  const [showNewProjectForm, setShowNewProjectForm] = useState(false);\r\n  const [uploadedData, setUploadedData] = useState([]);\r\n  const [projectsFromFile, setProjectsFromFile] = useState([]);\r\n  const [uploadError, setUploadError] = useState('');\r\n  const [uploadFileName, setUploadFileName] = useState('');\r\n  const [showAmountPopup, setShowAmountPopup] = useState(false);\r\n  const [dateFilter, setDateFilter] = useState({ from: '', to: '' });\r\n  const [showUploadedPreview, setShowUploadedPreview] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // --- ADD THIS BLOCK RIGHT HERE ---\r\n  useEffect(() => {\r\n    // Restore uploaded data and projects from localStorage if present\r\n    const savedData = localStorage.getItem('uploadedData');\r\n    const savedProjects = localStorage.getItem('projectsFromFile');\r\n    if (savedData && savedProjects) {\r\n      setUploadedData(JSON.parse(savedData));\r\n      setProjectsFromFile(JSON.parse(savedProjects));\r\n      setShowUploadedPreview(true);\r\n    }\r\n  }, []);\r\n  // --- END BLOCK ---\r\n\r\n  // Save view/page state to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('dashboardView', view);\r\n  }, [view]);\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedOrg', JSON.stringify(selectedOrg));\r\n  }, [selectedOrg]);\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedDept', selectedDept);\r\n  }, [selectedDept]);\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedProject', JSON.stringify(selectedProject));\r\n  }, [selectedProject]);\r\n \r\n  useEffect(() => {\r\n    // load organizations list\r\n    const loadOrgs = async () => {\r\n      try {\r\n        const res = await fetch(`${API_BASE}/organizations`);\r\n        const data = await res.json();\r\n        const mapped = data.map(o => ({\r\n          id: o.OrganizationID,\r\n          name: o.Name,\r\n          type: o.Type || '',\r\n          description: o.Description || '',\r\n          // choose icons/colors by name/type to keep existing UI consistent\r\n          icon: o.Name && o.Name.toLowerCase().includes('collabridge') ? Code : Building2,\r\n          color: o.Name && o.Name.toLowerCase().includes('la tierra') ? '#10b981' : '#3b82f6'\r\n        }));\r\n        setOrganizations(mapped);\r\n      } catch (err) {\r\n        console.error('Error loading organizations:', err);\r\n      }\r\n    };\r\n    loadOrgs();\r\n  }, []);\r\n \r\n  // Auto-select organization based on email domain\r\n  // useEffect(() => {\r\n  //   if (!userEmail || !organizations.length) return;\r\n \r\n  //   let orgToSelect = null;\r\n  //   if (userEmail.toLowerCase().endsWith('@collabridge.com')) {\r\n  //     orgToSelect = organizations.find(o => o.name.toLowerCase().includes('collabridge'));\r\n  //   } else if (userEmail.toLowerCase().endsWith('@latierra.com')) {\r\n  //     orgToSelect = organizations.find(o => o.name.toLowerCase().includes('la tierra') || o.name.toLowerCase().includes('buildcraft'));\r\n  //   }\r\n \r\n  //   if (orgToSelect && (!selectedOrg || selectedOrg.id !== orgToSelect.id)) {\r\n  //     handleOrgSelect(orgToSelect.id);\r\n  //   }\r\n  // }, [userEmail, organizations]);\r\n \r\n  // Auto-select organization if organizationId is present (DISABLED to always show selector)\r\n  // useEffect(() => {\r\n  //   if (!organizationId || !organizations.length) return;\r\n  //   const orgToSelect = organizations.find(o => o.id === Number(organizationId));\r\n  //   if (orgToSelect && (!selectedOrg || selectedOrg.id !== orgToSelect.id)) {\r\n  //     handleOrgSelect(orgToSelect.id);\r\n  //   }\r\n  // }, [organizationId, organizations]);\r\n \r\n  const handleOrgSelect = async (orgId) => {\r\n    setSelectedDept('all');\r\n    setSelectedProject(null);\r\n    setView('dashboard');\r\n\r\n    // Clear uploaded file state when switching organizations\r\n    setProjectsFromFile([]);\r\n    setUploadedData([]);\r\n    setShowUploadedPreview(false);\r\n    setUploadFileName('');\r\n    setUploadError('');\r\n\r\n    try {\r\n      // get organization details\r\n      const orgRes = await fetch(`${API_BASE}/organizations/${orgId}`);\r\n      const orgData = await orgRes.json();\r\n \r\n      // projects for organization\r\n      const projRes = await fetch(`${API_BASE}/projects?organizationId=${orgId}`);\r\n      const projRows = await projRes.json();\r\n \r\n      // departments list for filters\r\n      const deptRes = await fetch(`${API_BASE}/departments?organizationId=${orgId}`);\r\n      const deptRows = await deptRes.json();\r\n \r\n      // map project rows to the shape used by UI (keep DepartmentName for filtering)\r\n      const mappedProjects = (projRows || []).map(p => {\r\n        const budget = Number(p.Budget || 0);\r\n        const spent = Number(p.Spending || 0);\r\n        const profit = Number(p.Profit !== undefined ? p.Profit : (budget - spent));\r\n        return {\r\n          id: p.ProjectID || p.ProjectId || p.id,\r\n          name: p.ProjectName || p.Name || '',\r\n          status: (p.Status || '').toString(),\r\n          budget,\r\n          spent,\r\n          profit,\r\n          ar: Number(p.AR || 0),            // fallback 0, server may not supply project-level AR\r\n          ap: Number(p.AP !== undefined ? p.AP : spent), // fallback to spent as payable approximation\r\n          team: Number(p.Team || 0),        // not present in DB seed -> 0 unless backend supplies it\r\n          deadline: p.EndDate || p.deadline || '',\r\n          departmentName: p.DepartmentName || ''\r\n        };\r\n      });\r\n \r\n      setRawProjects(mappedProjects);\r\n      // set selectedOrg with API info + mapped projects\r\n      // Always use the name from organizations list if missing in API response\r\n      setSelectedOrg({\r\n        id: orgData.OrganizationID || orgId,\r\n        name: orgData.Name && orgData.Name.trim() ? orgData.Name : (organizations.find(o => o.id === orgId)?.name || ''),\r\n        type: orgData.Type && orgData.Type.trim() ? orgData.Type : (organizations.find(o => o.id === orgId)?.type || ''),\r\n        description: orgData.Description && orgData.Description.trim() ? orgData.Description : (organizations.find(o => o.id === orgId)?.description || ''),\r\n        projects: mappedProjects,\r\n        color: organizations.find(o => o.id === orgId)?.color || '#3b82f6',\r\n        icon: organizations.find(o => o.id === orgId)?.icon || Building2\r\n      });\r\n \r\n      // normalize departments\r\n      setDepartments((deptRows || []).map(d => ({ id: d.DepartmentID, name: d.Name })));\r\n \r\n      // totals: try to use organization dashboard endpoint\r\n      try {\r\n        const dashRes = await fetch(`${API_BASE}/organizations/${orgId}/dashboard`);\r\n        if (dashRes.ok) {\r\n          const dash = await dashRes.json();\r\n          setTotals({\r\n            budget: Number(dash.totalBudget || 0),\r\n            spent: Number(dash.totalSpending || 0),\r\n            profit: Number(dash.totalBudget || 0) - Number(dash.totalSpending || 0),\r\n            ar: Number(dash.totalAR || 0),\r\n            ap: Number(dash.totalAP || 0),\r\n            team: mappedProjects.reduce((s,p) => s + (p.team||0), 0)\r\n          });\r\n        } else {\r\n          // fallback compute from projects\r\n          computeTotalsFromProjects(mappedProjects);\r\n        }\r\n      } catch (err) {\r\n        computeTotalsFromProjects(mappedProjects);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error selecting organization:', err);\r\n    }\r\n  };\r\n \r\n  const computeTotalsFromProjects = (projects) => {\r\n    const t = projects.reduce((acc, project) => ({\r\n      budget: acc.budget + (project.budget || 0),\r\n      spent: acc.spent + (project.spent || 0),\r\n      profit: acc.profit + (project.profit || 0),\r\n      ar: acc.ar + (project.ar || 0),\r\n      ap: acc.ap + (project.ap || 0),\r\n      team: acc.team + (project.team || 0)\r\n    }), { budget:0, spent:0, profit:0, ar:0, ap:0, team:0 });\r\n    setTotals(t);\r\n  };\r\n \r\n  const handleProjectSelect = (project) => {\r\n    // project could be raw project object from projects list\r\n    setSelectedProject(project);\r\n    setView('project');\r\n  };\r\n \r\n  const handleBack = () => {\r\n    if (view === 'project') {\r\n      setView('dashboard');\r\n      setSelectedProject(null);\r\n    } else {\r\n      setView('organizations');\r\n      setSelectedOrg(null);\r\n      setSelectedDept('all');\r\n      setRawProjects([]);\r\n      setDepartments([]);\r\n      setTotals({ budget:0, spent:0, profit:0, ar:0, ap:0, team:0 });\r\n      // DO NOT clear uploadedData or projectsFromFile here!\r\n    }\r\n  };\r\n \r\n  const getFilteredProjects = () => {\r\n    // If projectsFromFile is present, use it for projects\r\n    if (projectsFromFile && projectsFromFile.length > 0) {\r\n      // If no department info, just return all\r\n      return projectsFromFile;\r\n    }\r\n    // Otherwise, use DB data\r\n    if (!selectedOrg) return [];\r\n    if (selectedOrg.id === 1 && selectedOrg.projects) {\r\n      return selectedOrg.projects;\r\n    }\r\n    // If no department info, just return all\r\n    return rawProjects;\r\n  };\r\n \r\n  const calculateTotals = (projects) => {\r\n    return projects.reduce((acc, project) => ({\r\n      budget: acc.budget + (project.budget || 0),\r\n      spent: acc.spent + (project.spent || 0),\r\n      profit: acc.profit + (project.profit || 0),\r\n      ar: acc.ar + (project.ar || 0),\r\n      ap: acc.ap + (project.ap || 0),\r\n      team: acc.team + (project.team || 0)\r\n    }), { budget: 0, spent: 0, profit: 0, ar: 0, ap: 0, team: 0 });\r\n  };\r\n \r\n  // called after a new project is created to refresh\r\n  const handleProjectCreated = async () => {\r\n    setShowNewProjectForm(false);\r\n    if (selectedOrg && selectedOrg.id) {\r\n      // re-load selected organization data (reuse handleOrgSelect)\r\n      await handleOrgSelect(selectedOrg.id);\r\n    }\r\n  };\r\n \r\n  // Inline modal component (no separate NewProjectForm file)\r\n  const NewProjectModal = ({ organizationId, departments = [], onCreated, onCancel }) => {\r\n    const [form, setForm] = useState({\r\n      name: '',\r\n      departmentId: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      budget: '',\r\n      spending: '',\r\n      status: 'Not Started',\r\n      description: ''\r\n    });\r\n    const [submitting, setSubmitting] = useState(false);\r\n \r\n    useEffect(() => {\r\n      const prev = document.body.style.overflow;\r\n      document.body.style.overflow = 'hidden';\r\n      const onKey = (e) => { if (e.key === 'Escape') onCancel && onCancel(); };\r\n      window.addEventListener('keydown', onKey);\r\n      return () => {\r\n        document.body.style.overflow = prev;\r\n        window.removeEventListener('keydown', onKey);\r\n      };\r\n    }, [onCancel]);\r\n \r\n    const update = (k, v) => setForm(s => ({ ...s, [k]: v }));\r\n \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      if (submitting) return;\r\n      setSubmitting(true);\r\n      const payload = {\r\n        Name: form.name,\r\n        DepartmentID: form.departmentId || null,\r\n        OrganizationID: organizationId || null,\r\n        StartDate: form.startDate || null,\r\n        EndDate: form.endDate || null,\r\n        Budget: form.budget ? parseFloat(form.budget) : 0,\r\n        Spending: form.spending ? parseFloat(form.spending) : 0,\r\n        Status: form.status,\r\n        Description: form.description || null\r\n      };\r\n      try {\r\n        const res = await fetch(`${API_BASE}/projects`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload)\r\n        });\r\n        if (res.ok) {\r\n          onCreated && onCreated();\r\n        } else {\r\n          const err = await res.json().catch(()=>({}));\r\n          alert('Failed to create project: ' + (err.error || res.statusText));\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        alert('Failed to create project');\r\n      } finally {\r\n        setSubmitting(false);\r\n      }\r\n    };\r\n \r\n    return (\r\n      <div\r\n        className=\"modal-overlay\"\r\n        onMouseDown={() => onCancel && onCancel()}\r\n        style={{\r\n          position: 'fixed', inset: 0, background: 'rgba(0,0,0,0.45)', display: 'flex',\r\n          alignItems: 'center', justifyContent: 'center', zIndex: 2000\r\n        }}\r\n      >\r\n        <div\r\n          className=\"modal-panel\"\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          onMouseDown={(e) => e.stopPropagation()}\r\n          style={{\r\n            width: 720, maxWidth: '95%', background: '#fff', borderRadius: 8, padding: 20,\r\n            boxShadow: '0 10px 30px rgba(0,0,0,0.25)'\r\n          }}\r\n        >\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 12 }}>\r\n            <h2 style={{ margin: 0 }}>Create New Project</h2>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onCancel && onCancel()}\r\n              aria-label=\"Close\"\r\n              style={{ border: 0, background: 'transparent', fontSize: 20, lineHeight: 1, cursor: 'pointer' }}\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n \r\n          <form onSubmit={handleSubmit}>\r\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 12 }}>\r\n              <div>\r\n                <label style={{ display: 'block', fontSize: 12, marginBottom: 6 }}>Project Name</label>\r\n                <input required value={form.name} onChange={e => update('name', e.target.value)} style={{ width: '100%', padding: 8 }} />\r\n              </div>\r\n \r\n              <div>\r\n                <label style={{ display: 'block', fontSize: 12, marginBottom: 6 }}>Department</label>\r\n                <select value={form.departmentId} onChange={e => update('departmentId', e.target.value)} style={{ width: '100%', padding: 8 }}>\r\n                  <option value=\"\">-- none -- (organization-level)</option>\r\n                  {departments.map(d => <option key={d.id} value={d.id}>{d.name}</option>)}\r\n                </select>\r\n              </div>\r\n \r\n              <div>\r\n                <label style={{ display: 'block', fontSize: 12, marginBottom: 6 }}>Start Date</label>\r\n                <input type=\"date\" value={form.startDate} onChange={e => update('startDate', e.target.value)} style={{ width: '100%', padding: 8 }} />\r\n              </div>\r\n \r\n              <div>\r\n                <label style={{ display: 'block', fontSize: 12, marginBottom: 6 }}>End Date</label>\r\n                <input type=\"date\" value={form.endDate} onChange={e => update('endDate', e.target.value)} style={{ width: '100%', padding: 8 }} />\r\n              </div>\r\n \r\n              <div>\r\n                <label style={{ display: 'block', fontSize: 12, marginBottom: 6 }}>Budget</label>\r\n                <input type=\"number\" value={form.budget} onChange={e => update('budget', e.target.value)} style={{ width: '100%', padding: 8 }} />\r\n              </div>\r\n \r\n              <div>\r\n                <label style={{ display: 'block', fontSize: 12, marginBottom: 6 }}>Spending</label>\r\n                <input type=\"number\" value={form.spending} onChange={e => update('spending', e.target.value)} style={{ width: '100%', padding: 8 }} />\r\n              </div>\r\n \r\n              <div style={{ gridColumn: '1 / -1' }}>\r\n                <label style={{ display: 'block', fontSize: 12, marginBottom: 6 }}>Status</label>\r\n                <select value={form.status} onChange={e => update('status', e.target.value)} style={{ width: '100%', padding: 8 }}>\r\n                  <option>Not Started</option>\r\n                  <option>In Progress</option>\r\n                  <option>Completed</option>\r\n                  <option>On Hold</option>\r\n                </select>\r\n              </div>\r\n \r\n              <div style={{ gridColumn: '1 / -1' }}>\r\n                <label style={{ display: 'block', fontSize: 12, marginBottom: 6 }}>Description (optional)</label>\r\n                <textarea value={form.description} onChange={e => update('description', e.target.value)} style={{ width: '100%', padding: 8 }} rows={3} />\r\n              </div>\r\n            </div>\r\n \r\n            <div style={{ display: 'flex', justifyContent: 'flex-end', gap: 8, marginTop: 16 }}>\r\n              <button type=\"button\" onClick={() => onCancel && onCancel()} style={{ padding: '8px 14px' }}>Cancel</button>\r\n              <button type=\"submit\" disabled={submitting} style={{ padding: '8px 14px' }}>\r\n                {submitting ? 'Creating…' : 'Create Project'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n \r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    try {\r\n      const parsedData = await parseFile(file);\r\n      setUploadedData(parsedData);\r\n      localStorage.setItem('uploadedData', JSON.stringify(parsedData)); // Save to localStorage\r\n\r\n      const groupedProjects = groupProjectsById(parsedData);\r\n      setProjectsFromFile(groupedProjects);\r\n      localStorage.setItem('projectsFromFile', JSON.stringify(groupedProjects)); // Save to localStorage\r\n\r\n      setShowUploadedPreview(true);\r\n      setUploadFileName(file.name);\r\n      setUploadError('');\r\n    } catch (err) {\r\n      setUploadError('Failed to parse file.');\r\n    }\r\n  };\r\n \r\n    // Helper function to calculate metrics from Excel data\r\n  const getExcelMetrics = (data) => {\r\n    let totalAmount = 0;\r\n    const byCategory = {};\r\n    const byExpenseType = {};\r\n \r\n    data.forEach(row => {\r\n      const amount = Number(row.Amount || 0);\r\n      totalAmount += amount;\r\n \r\n      const category = row.Category || 'Uncategorized';\r\n      byCategory[category] = (byCategory[category] || 0) + amount;\r\n \r\n      const expenseType = row.ExpenseType || 'Expense';\r\n      byExpenseType[expenseType] = (byExpenseType[expenseType] || 0) + amount;\r\n    });\r\n \r\n    return { totalAmount, byCategory, byExpenseType };\r\n  };\r\n \r\n    const handleSaveToDB = async () => {\r\n      if (!uploadedData.length) return;\r\n      const res = await fetch(`${API_BASE}/import-transactions`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          rows: uploadedData,\r\n          uploaderEmail: userEmail,\r\n          fileName: uploadFileName,\r\n          organizationId: selectedOrg?.id || null\r\n        })\r\n      });\r\n      const result = await res.json();\r\n      alert(result.message || 'Import complete');\r\n\r\n      // Clear upload state and reload organization data from DB\r\n      setShowUploadedPreview(false);\r\n      setUploadedData([]);\r\n      setProjectsFromFile([]);\r\n      setUploadFileName('');\r\n      setUploadError('');\r\n      await handleOrgSelect(selectedOrg.id); // Reload from DB\r\n    };\r\n \r\n  // Move this helper function up, before you use it!\r\n  const getFilteredUploadedData = () => {\r\n    if (!uploadedData.length) return [];\r\n    if (!dateFilter.from && !dateFilter.to) return uploadedData;\r\n    return uploadedData.filter(row => {\r\n      const rowDate = row.Date || row.TxnDate;\r\n      if (!rowDate) return false;\r\n      const d = new Date(rowDate);\r\n      const from = dateFilter.from ? new Date(dateFilter.from) : null;\r\n      const to = dateFilter.to ? new Date(dateFilter.to) : null;\r\n      if (from && d < from) return false;\r\n      if (to && d > to) return false;\r\n      return true;\r\n    });\r\n  };\r\n \r\n  const filteredExcelData = getFilteredUploadedData();\r\n  const metrics = getExcelMetrics(filteredExcelData);\r\n \r\n  const renderExcelCards = (metrics) => (\r\n    <div style={{ display: 'flex', gap: 24, marginBottom: 24 }}>\r\n      <div\r\n        className=\"card\"\r\n        style={{ flex: 1, background: '#e0f2fe', padding: 18, borderRadius: 8, cursor: 'pointer' }}\r\n        onClick={() => setShowAmountPopup(true)}\r\n        title=\"Click to view breakdown\"\r\n      >\r\n        <h4>Total Amount</h4>\r\n        <div style={{ fontSize: 28, fontWeight: 700 }}>{metrics.totalAmount.toLocaleString()}</div>\r\n      </div>\r\n      <div className=\"card\" style={{ flex: 1, background: '#fef9c3', padding: 18, borderRadius: 8 }}>\r\n        <h4>Categories</h4>\r\n        <ul style={{ margin: 0, padding: 0, listStyle: 'none' }}>\r\n          {Object.entries(metrics.byCategory).map(([cat, amt]) => (\r\n            <li key={cat} style={{ fontSize: 16 }}>{cat}: <b>{amt.toLocaleString()}</b></li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"card\" style={{ flex: 1, background: '#dcfce7', padding: 18, borderRadius: 8 }}>\r\n        <h4>Expense Types</h4>\r\n        <ul style={{ margin: 0, padding: 0, listStyle: 'none' }}>\r\n          {Object.entries(metrics.byExpenseType).map(([type, amt]) => (\r\n            <li key={type} style={{ fontSize: 16 }}>{type}: <b>{amt.toLocaleString()}</b></li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n \r\n  const renderExcelCharts = (metrics) => (\r\n    <div style={{ display: 'flex', gap: 32, marginBottom: 24 }}>\r\n      <div style={{ flex: 1 }}>\r\n        <h4>Amount by Category</h4>\r\n        <Pie\r\n          data={{\r\n            labels: Object.keys(metrics.byCategory),\r\n            datasets: [{\r\n              data: Object.values(metrics.byCategory),\r\n              backgroundColor: ['#3b82f6', '#10b981', '#f59e42', '#f43f5e', '#6366f1', '#fef9c3'],\r\n            }]\r\n          }}\r\n          options={{ plugins: { legend: { position: 'bottom' } } }}\r\n        />\r\n      </div>\r\n      <div style={{ flex: 1 }}>\r\n        <h4>Amount by Expense Type</h4>\r\n        <Bar\r\n          data={{\r\n            labels: Object.keys(metrics.byExpenseType),\r\n            datasets: [{\r\n              label: 'Amount',\r\n              data: Object.values(metrics.byExpenseType),\r\n              backgroundColor: '#3b82f6',\r\n            }]\r\n          }}\r\n          options={{\r\n            plugins: { legend: { display: false } },\r\n            scales: { y: { beginAtZero: true } }\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n \r\n  const renderRecentTransactions = (data) => (\r\n    <div style={{ marginBottom: 24 }}>\r\n      <h4>Recent Transactions</h4>\r\n      <div style={{ display: 'flex', gap: 16, flexWrap: 'wrap' }}>\r\n        {data.slice(0, 5).map((row, idx) => (\r\n          <div key={idx} style={{\r\n            background: '#fff', border: '1px solid #eee', borderRadius: 8, padding: 14, minWidth: 180, boxShadow: '0 2px 8px #f3f4f6'\r\n          }}>\r\n            <div style={{ fontWeight: 600 }}>{row.Category || 'Uncategorized'}</div>\r\n            <div style={{ color: '#3b82f6', fontSize: 18 }}>{Number(row.Amount || 0).toLocaleString()}</div>\r\n            <div style={{ fontSize: 12, color: '#666' }}>{row.ExpenseType || 'Expense'} | {row.Date || row.TxnDate}</div>\r\n            <div style={{ fontSize: 12, color: '#888' }}>{row.Note || row.Description}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n \r\n  // Helper to extract initial amount from uploaded Excel data\r\nconst getInitialAmountFromExcel = (data) => {\r\n  if (!data || !data.length) return 0;\r\n  // Look for a row with Category: \"Initial\" or ExpenseType: \"Initial\"\r\n  const initialRow = data.find(\r\n    row =>\r\n      (row.Category && row.Category.toLowerCase() === 'initial') ||\r\n      (row.ExpenseType && row.ExpenseType.toLowerCase() === 'initial')\r\n  );\r\n  if (initialRow) {\r\n    return Number(initialRow.Amount || 0);\r\n  }\r\n  // Optionally, fallback to first row if you want\r\n  // return Number(data[0].Amount || 0);\r\n  return 0;\r\n};\r\n \r\n  const getAmountBreakdown = (data) => {\r\n    // Dynamically get initial amount from Excel\r\n    const initialAmount = getInitialAmountFromExcel(data);\r\n \r\n    let totalExpenses = 0;\r\n    let totalIncome = 0;\r\n    const expenseDetails = {};\r\n    const incomeDetails = {};\r\n \r\n    data.forEach(row => {\r\n      // Skip initial amount row from expense/income calculation\r\n      const isInitial =\r\n        (row.Category && row.Category.toLowerCase() === 'initial') ||\r\n        (row.ExpenseType && row.ExpenseType.toLowerCase() === 'initial');\r\n      if (isInitial) return;\r\n \r\n      const amt = Number(row.Amount || 0);\r\n      const type = (row.Category || '').toLowerCase();\r\n      const expType = row.ExpenseType || 'Expense';\r\n \r\n      if (type === 'expense' || expType.toLowerCase() === 'expense') {\r\n        totalExpenses += amt;\r\n        expenseDetails[expType] = (expenseDetails[expType] || 0) + amt;\r\n      } else if (type === 'receipt' || expType.toLowerCase() === 'receipt' || expType.toLowerCase() === 'income') {\r\n        totalIncome += amt;\r\n        incomeDetails[expType] = (incomeDetails[expType] || 0) + amt;\r\n      }\r\n    });\r\n \r\n    const remaining = initialAmount + totalIncome - totalExpenses;\r\n    return { initialAmount, totalExpenses, totalIncome, remaining, expenseDetails, incomeDetails };\r\n};\r\n \r\n  // Helper to group non-project transactions\r\n  function getOtherTransactions(data) {\r\n    return data.filter(row => !row.ProjectID && !row.ProjectName && !row.projectId && !row.projectName);\r\n  }\r\n \r\n  // Helper to create \"Other\" pseudo-project\r\n  function getOtherProject(data) {\r\n    const otherTxs = getOtherTransactions(data);\r\n    if (!otherTxs.length) return null;\r\n    const ar = otherTxs\r\n      .filter(tx => (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'income' || (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'receipt')\r\n      .reduce((sum, tx) => sum + Number(tx.Amount || tx.amount || 0), 0);\r\n    const ap = otherTxs\r\n      .filter(tx => (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'expense')\r\n      .reduce((sum, tx) => sum + Number(tx.Amount || tx.amount || 0), 0);\r\n    return {\r\n      id: 'other',\r\n      name: 'Other (Non-Project)',\r\n      transactions: otherTxs,\r\n      ar,\r\n      ap,\r\n      profit: ar - ap,\r\n    };\r\n  }\r\n \r\n  const projectsData = projectsFromFile.length > 0 ? projectsFromFile : getFilteredProjects();\r\n  let dashboardProjects = [...projectsData];\r\n  if (uploadedData.length > 0) {\r\n    const otherProject = getOtherProject(uploadedData);\r\n    if (otherProject) dashboardProjects.push(otherProject);\r\n  }\r\n \r\n  // --- ADD RELOAD FUNCTION HERE ---\r\n  const reloadDashboardDataFromDB = async () => {\r\n    // Fetch projects and transactions from DB for the selected organization\r\n    const orgId = selectedOrg?.id || organizationId;\r\n    if (!orgId) return;\r\n    try {\r\n      const res = await fetch(`http://localhost:3001/projects?organizationId=${orgId}`);\r\n      const projects = await res.json();\r\n      setRawProjects(projects);\r\n      // ...update other dashboard state as needed...\r\n    } catch (err) {\r\n      alert('Failed to reload dashboard data: ' + err.message);\r\n    }\r\n  };\r\n  // --- END BLOCK ---\r\n \r\n  return (\r\n    <>\r\n      <Header isLoggedIn={isLoggedIn} onLogout={onLogout} />\r\n      {view === 'organizations' && (\r\n        <OrganizationSelector\r\n          organizations={organizations}\r\n          onSelect={handleOrgSelect}\r\n        />\r\n      )}\r\n\r\n      {view === 'project' && selectedProject && (\r\n        <ProjectDashboard\r\n          project={selectedProject}\r\n          organization={selectedOrg}\r\n          onBack={handleBack}\r\n        />\r\n      )}\r\n\r\n      {view === 'dashboard' && (\r\n        <>\r\n          <CompanyDashboard\r\n            organization={selectedOrg}\r\n            selectedDept={selectedDept}\r\n            onDeptChange={setSelectedDept}\r\n            onProjectSelect={handleProjectSelect}\r\n            onAddProject={setShowNewProjectForm}\r\n            onFileUpload={handleFileUpload}\r\n            onBack={handleBack}\r\n            projects={dashboardProjects} // <-- this is correct!\r\n            totals={calculateTotals(dashboardProjects)}\r\n          />\r\n          {showNewProjectForm && selectedOrg && (\r\n            <NewProjectModal\r\n              organizationId={selectedOrg.id}\r\n              departments={departments}\r\n              onCreated={handleProjectCreated}\r\n              onCancel={() => setShowNewProjectForm(false)}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Amount Breakdown Popup */}\r\n      {showAmountPopup && uploadedData.length > 0 && (\r\n        <AmountBreakdownPopup\r\n          breakdown={getAmountBreakdown(uploadedData)}\r\n          onClose={() => setShowAmountPopup(false)}\r\n        />\r\n      )}\r\n\r\n      {showUploadedPreview && uploadedData.length > 0 && (\r\n        <div className=\"uploaded-preview\">\r\n          <h3>Uploaded Data Preview</h3>\r\n          {/* Render a table or summary of uploadedData here */}\r\n          <button\r\n            style={{\r\n              background: '#10b981',\r\n              color: '#fff',\r\n              padding: '10px 24px',\r\n              borderRadius: 8,\r\n              border: 'none',\r\n              fontWeight: 600,\r\n              marginTop: 16,\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={handleSaveToDB}\r\n          >\r\n            Export to Database\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n \r\nconst AmountBreakdownPopup = ({ breakdown, onClose }) => (\r\n  <div style={{\r\n    position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh',\r\n    background: 'rgba(0,0,0,0.35)', display: 'flex', alignItems: 'center', justifyContent: 'center', zIndex: 9999\r\n  }}>\r\n    <div style={{\r\n      background: '#fff', borderRadius: 10, padding: 32, minWidth: 340, boxShadow: '0 4px 24px #0002', position: 'relative'\r\n    }}>\r\n      <button\r\n        onClick={onClose}\r\n        style={{\r\n          position: 'absolute', top: 12, right: 16, background: 'none', border: 'none', fontSize: 22, cursor: 'pointer'\r\n        }}\r\n        aria-label=\"Close\"\r\n      >×</button>\r\n      <h2 style={{ marginTop: 0 }}>Total Amount Breakdown</h2>\r\n      <div style={{ marginBottom: 16 }}>\r\n        <b>Initial Amount:</b> ₹{breakdown.initialAmount.toLocaleString()}\r\n      </div>\r\n      <div style={{ marginBottom: 16 }}>\r\n        <b>Total Expenses:</b> ₹{breakdown.totalExpenses.toLocaleString()}\r\n        <ul style={{ margin: '8px 0 0 16px', padding: 0 }}>\r\n          {Object.entries(breakdown.expenseDetails).map(([cat, amt]) => (\r\n            <li key={cat}>{cat}: ₹{amt.toLocaleString()}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div style={{ marginBottom: 16 }}>\r\n        <b>Total Income:</b> ₹{breakdown.totalIncome.toLocaleString()}\r\n        <ul style={{ margin: '8px 0 0 16px', padding: 0 }}>\r\n          {Object.entries(breakdown.incomeDetails).map(([cat, amt]) => (\r\n            <li key={cat}>{cat}: ₹{amt.toLocaleString()}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div style={{ fontSize: 18, fontWeight: 600, color: '#10b981' }}>\r\n        Remaining Balance: ₹{breakdown.remaining.toLocaleString()}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n \r\nconst parseFile = async (file) => {\r\n  // CSV\r\n  if (file.name.endsWith('.csv')) {\r\n    return new Promise((resolve, reject) => {\r\n      Papa.parse(file, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: (results) => resolve(results.data),\r\n        error: (err) => reject(err)\r\n      });\r\n    });\r\n  }\r\n  // Excel (xlsx/xls)\r\n  if (file.name.endsWith('.xlsx') || file.name.endsWith('.xls')) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const data = new Uint8Array(e.target.result);\r\n        const workbook = XLSX.read(data, { type: 'array' });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const worksheet = workbook.Sheets[sheetName];\r\n        const json = XLSX.utils.sheet_to_json(worksheet, { defval: '' });\r\n        resolve(json);\r\n      };\r\n      reader.onerror = reject;\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }\r\n  throw new Error('Unsupported file type');\r\n};\r\n\r\nfunction groupProjectsById(data) {\r\n  const projectsMap = {};\r\n  data.forEach(row => {\r\n    const pid = row.ProjectID || row.projectId || row.project_id || row.ProjectName || row.projectName;\r\n    if (!pid) return;\r\n    if (!projectsMap[pid]) {\r\n      projectsMap[pid] = {\r\n        id: pid,\r\n        name: row.ProjectName || row.projectName || `Project ${pid}`,\r\n        transactions: [],\r\n        ar: 0,\r\n        ap: 0,\r\n        profit: 0,\r\n      };\r\n    }\r\n    projectsMap[pid].transactions.push(row);\r\n  });\r\n  // Calculate AR, AP, Profit for each project\r\n  Object.values(projectsMap).forEach(project => {\r\n    project.ar = project.transactions\r\n      .filter(tx => (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'income' || (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'receipt')\r\n      .reduce((sum, tx) => sum + Number(tx.Amount || tx.amount || 0), 0);\r\n    project.ap = project.transactions\r\n      .filter(tx => (tx.ExpenseType || tx.expenseType || '').toLowerCase() === 'expense')\r\n      .reduce((sum, tx) => sum + Number(tx.Amount || tx.amount || 0), 0);\r\n    project.profit = project.ar - project.ap;\r\n  });\r\n  return Object.values(projectsMap);\r\n}\r\n\r\nexport default OrganizationDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}