{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VivekReddyMeka\\\\Desktop\\\\Accounts_Management\\\\src\\\\Components\\\\OrganizationSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LoginScreen from './Components/Loginscreen';\nimport OrganizationSelector from './Components/OrganizationSelector';\nimport OrganizationDashboard from './Components/Dashboard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [selectedOrgId, setSelectedOrgId] = useState(null);\n  const [organizations, setOrganizations] = useState([]);\n  useEffect(() => {\n    // Fetch organizations from your backend API\n    fetch('http://localhost:3001/organizations').then(res => res.json()).then(data => setOrganizations(data)).catch(err => {\n      setOrganizations([]);\n      // Optionally show an error message\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(LoginScreen, {\n      onLogin: () => setIsLoggedIn(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : !selectedOrgId ? /*#__PURE__*/_jsxDEV(OrganizationSelector, {\n      organizations: organizations,\n      onSelect: id => setSelectedOrgId(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(OrganizationDashboard, {\n      orgId: selectedOrgId,\n      onLogout: () => {\n        setIsLoggedIn(false);\n        setSelectedOrgId(null);\n      },\n      onBack: () => setSelectedOrgId(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"AXwytsBxIluFdv4eebGA/eM52cA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoginScreen","OrganizationSelector","OrganizationDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","selectedOrgId","setSelectedOrgId","organizations","setOrganizations","fetch","then","res","json","data","catch","err","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","id","orgId","onLogout","onBack","_c","$RefreshReg$"],"sources":["C:/Users/VivekReddyMeka/Desktop/Accounts_Management/src/Components/OrganizationSelector.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport LoginScreen from './Components/Loginscreen';\r\nimport OrganizationSelector from './Components/OrganizationSelector';\r\nimport OrganizationDashboard from './Components/Dashboard';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [selectedOrgId, setSelectedOrgId] = useState(null);\r\n  const [organizations, setOrganizations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch organizations from your backend API\r\n    fetch('http://localhost:3001/organizations')\r\n      .then((res) => res.json())\r\n      .then((data) => setOrganizations(data))\r\n      .catch((err) => {\r\n        setOrganizations([]);\r\n        // Optionally show an error message\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!isLoggedIn ? (\r\n        <LoginScreen onLogin={() => setIsLoggedIn(true)} />\r\n      ) : !selectedOrgId ? (\r\n        <OrganizationSelector\r\n          organizations={organizations}\r\n          onSelect={(id) => setSelectedOrgId(id)}\r\n        />\r\n      ) : (\r\n        <OrganizationDashboard\r\n          orgId={selectedOrgId}\r\n          onLogout={() => {\r\n            setIsLoggedIn(false);\r\n            setSelectedOrgId(null);\r\n          }}\r\n          onBack={() => setSelectedOrgId(null)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,oBAAoB,MAAM,mCAAmC;AACpE,OAAOC,qBAAqB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd;IACAgB,KAAK,CAAC,qCAAqC,CAAC,CACzCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,gBAAgB,CAACK,IAAI,CAAC,CAAC,CACtCC,KAAK,CAAEC,GAAG,IAAK;MACdP,gBAAgB,CAAC,EAAE,CAAC;MACpB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EACG,CAACb,UAAU,gBACVL,OAAA,CAACJ,WAAW;MAACuB,OAAO,EAAEA,CAAA,KAAMb,aAAa,CAAC,IAAI;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GACjD,CAAChB,aAAa,gBAChBP,OAAA,CAACH,oBAAoB;MACnBY,aAAa,EAAEA,aAAc;MAC7Be,QAAQ,EAAGC,EAAE,IAAKjB,gBAAgB,CAACiB,EAAE;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,gBAEFvB,OAAA,CAACF,qBAAqB;MACpB4B,KAAK,EAAEnB,aAAc;MACrBoB,QAAQ,EAAEA,CAAA,KAAM;QACdrB,aAAa,CAAC,KAAK,CAAC;QACpBE,gBAAgB,CAAC,IAAI,CAAC;MACxB,CAAE;MACFoB,MAAM,EAAEA,CAAA,KAAMpB,gBAAgB,CAAC,IAAI;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EACF,gBACD,CAAC;AAEP;AAACnB,EAAA,CArCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}